state 37 contains 1 shift/reduce conflicts
state 38 contains 1 shift/reduce conflicts
state 43 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 Root: 
rule 2 Root: Expressions
rule 3 Expressions: Expression
rule 4 Expressions: Expressions Terminator Expression
rule 5 Expressions: Expressions Terminator
rule 6 Expression: Literal
rule 7 Expression: Call
rule 8 Expression: Constant
rule 9 Expression: Assign
rule 10 Expression: Def
rule 11 Expression: Class
rule 12 Expression: If
rule 13 Terminator: NEWLINE
rule 14 Terminator: ";"
rule 15 Literal: NUMBER
rule 16 Literal: STRING
rule 17 Literal: TRUE
rule 18 Literal: FALSE
rule 19 Literal: NIL
rule 20 Call: IDENTIFIER
rule 21 Call: IDENTIFIER "(" ArgList ")"
rule 22 Call: Expression "." IDENTIFIER
rule 23 Call: Expression "." IDENTIFIER "(" ArgList ")"
rule 24 ArgList: 
rule 25 ArgList: Expression
rule 26 ArgList: ArgList "," Expression
rule 27 Constant: CONSTANT
rule 28 Assign: IDENTIFIER "=" Expression
rule 29 Assign: CONSTANT "=" Expression
rule 30 Def: CAN IDENTIFIER Block
rule 31 Def: CAN IDENTIFIER "(" ParamList ")" Block
rule 32 ParamList: 
rule 33 ParamList: IDENTIFIER
rule 34 ParamList: ParamList "," IDENTIFIER
rule 35 Class: A CONSTANT Block
rule 36 If: IF Expression Block
rule 37 If: IF Expression Block NEWLINE ELSE Block
rule 38 Block: "{" Expressions "}"

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (22)
    on right: 
    on left : 
  Root (23)
    on right: 
    on left : 1 2
  Expressions (24)
    on right: 2 4 5 38
    on left : 3 4 5
  Expression (25)
    on right: 3 4 22 23 25 26 28 29 36 37
    on left : 6 7 8 9 10 11 12
  Terminator (26)
    on right: 4 5
    on left : 13 14
  Literal (27)
    on right: 6
    on left : 15 16 17 18 19
  Call (28)
    on right: 7
    on left : 20 21 22 23
  Constant (29)
    on right: 8
    on left : 27
  Assign (30)
    on right: 9
    on left : 28 29
  Def (31)
    on right: 10
    on left : 30 31
  Class (32)
    on right: 11
    on left : 35
  If (33)
    on right: 12
    on left : 36 37
  ArgList (34)
    on right: 21 23 26
    on left : 24 25 26
  Block (35)
    on right: 30 31 35 36 37
    on left : 38
  ParamList (36)
    on right: 31 34
    on left : 32 33 34

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  A (2) 35
  CAN (3) 30 31
  IF (4) 36 37
  ELSE (5) 37
  NEWLINE (6) 13 37
  NUMBER (7) 15
  STRING (8) 16
  TRUE (9) 17
  FALSE (10) 18
  NIL (11) 19
  IDENTIFIER (12) 20 21 22 23 28 30 31 33 34
  CONSTANT (13) 27 29 35
  ";" (14) 14
  "(" (15) 21 23 31
  ")" (16) 21 23 31
  "." (17) 22 23
  "," (18) 26 34
  "=" (19) 28 29
  "{" (20) 38
  "}" (21) 38

--------- State ---------

state 0


  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17
  $default      reduce using rule 1 (Root)

  Root          go to state 1
  Expressions   go to state 2
  Expression    go to state 3
  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10

state 1


  $end          shift, and go to state 21


state 2

   2) Root : Expressions _
   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator

  NEWLINE       shift, and go to state 23
  ";"           shift, and go to state 24
  $default      reduce using rule 2 (Root)

  Terminator    go to state 22

state 3

   3) Expressions : Expression _
  22) Call : Expression _ "." IDENTIFIER
  23) Call : Expression _ "." IDENTIFIER "(" ArgList ")"

  "."           shift, and go to state 25
  $default      reduce using rule 3 (Expressions)


state 4

   6) Expression : Literal _

  $default      reduce using rule 6 (Expression)


state 5

   7) Expression : Call _

  $default      reduce using rule 7 (Expression)


state 6

   8) Expression : Constant _

  $default      reduce using rule 8 (Expression)


state 7

   9) Expression : Assign _

  $default      reduce using rule 9 (Expression)


state 8

  10) Expression : Def _

  $default      reduce using rule 10 (Expression)


state 9

  11) Expression : Class _

  $default      reduce using rule 11 (Expression)


state 10

  12) Expression : If _

  $default      reduce using rule 12 (Expression)


state 11

  15) Literal : NUMBER _

  $default      reduce using rule 15 (Literal)


state 12

  16) Literal : STRING _

  $default      reduce using rule 16 (Literal)


state 13

  17) Literal : TRUE _

  $default      reduce using rule 17 (Literal)


state 14

  18) Literal : FALSE _

  $default      reduce using rule 18 (Literal)


state 15

  19) Literal : NIL _

  $default      reduce using rule 19 (Literal)


state 16

  20) Call : IDENTIFIER _
  21) Call : IDENTIFIER _ "(" ArgList ")"
  28) Assign : IDENTIFIER _ "=" Expression

  "("           shift, and go to state 26
  "="           shift, and go to state 27
  $default      reduce using rule 20 (Call)


state 17

  27) Constant : CONSTANT _
  29) Assign : CONSTANT _ "=" Expression

  "="           shift, and go to state 28
  $default      reduce using rule 27 (Constant)


state 18

  30) Def : CAN _ IDENTIFIER Block
  31) Def : CAN _ IDENTIFIER "(" ParamList ")" Block

  IDENTIFIER    shift, and go to state 29


state 19

  35) Class : A _ CONSTANT Block

  CONSTANT      shift, and go to state 30


state 20

  36) If : IF _ Expression Block
  37) If : IF _ Expression Block NEWLINE ELSE Block

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17

  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10
  Expression    go to state 31

state 21


  $end          shift, and go to state 32


state 22

   4) Expressions : Expressions Terminator _ Expression
   5) Expressions : Expressions Terminator _

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17
  $default      reduce using rule 5 (Expressions)

  Expression    go to state 33
  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10

state 23

  13) Terminator : NEWLINE _

  $default      reduce using rule 13 (Terminator)


state 24

  14) Terminator : ";" _

  $default      reduce using rule 14 (Terminator)


state 25

  22) Call : Expression "." _ IDENTIFIER
  23) Call : Expression "." _ IDENTIFIER "(" ArgList ")"

  IDENTIFIER    shift, and go to state 34


state 26

  21) Call : IDENTIFIER "(" _ ArgList ")"

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17
  $default      reduce using rule 24 (ArgList)

  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10
  ArgList       go to state 35
  Expression    go to state 36

state 27

  28) Assign : IDENTIFIER "=" _ Expression

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17

  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10
  Expression    go to state 37

state 28

  29) Assign : CONSTANT "=" _ Expression

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17

  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10
  Expression    go to state 38

state 29

  30) Def : CAN IDENTIFIER _ Block
  31) Def : CAN IDENTIFIER _ "(" ParamList ")" Block

  "("           shift, and go to state 40
  "{"           shift, and go to state 41

  Block         go to state 39

state 30

  35) Class : A CONSTANT _ Block

  "{"           shift, and go to state 41

  Block         go to state 42

state 31

  22) Call : Expression _ "." IDENTIFIER
  23) Call : Expression _ "." IDENTIFIER "(" ArgList ")"
  36) If : IF Expression _ Block
  37) If : IF Expression _ Block NEWLINE ELSE Block

  "."           shift, and go to state 25
  "{"           shift, and go to state 41

  Block         go to state 43

state 32


  $default      accept


state 33

   4) Expressions : Expressions Terminator Expression _
  22) Call : Expression _ "." IDENTIFIER
  23) Call : Expression _ "." IDENTIFIER "(" ArgList ")"

  "."           shift, and go to state 25
  $default      reduce using rule 4 (Expressions)


state 34

  22) Call : Expression "." IDENTIFIER _
  23) Call : Expression "." IDENTIFIER _ "(" ArgList ")"

  "("           shift, and go to state 44
  $default      reduce using rule 22 (Call)


state 35

  21) Call : IDENTIFIER "(" ArgList _ ")"
  26) ArgList : ArgList _ "," Expression

  ")"           shift, and go to state 45
  ","           shift, and go to state 46


state 36

  22) Call : Expression _ "." IDENTIFIER
  23) Call : Expression _ "." IDENTIFIER "(" ArgList ")"
  25) ArgList : Expression _

  "."           shift, and go to state 25
  $default      reduce using rule 25 (ArgList)


state 37

  22) Call : Expression _ "." IDENTIFIER
  23) Call : Expression _ "." IDENTIFIER "(" ArgList ")"
  28) Assign : IDENTIFIER "=" Expression _

  "."           shift, and go to state 25
  "."           [reduce using rule 28 (Assign)]
  $default      reduce using rule 28 (Assign)


state 38

  22) Call : Expression _ "." IDENTIFIER
  23) Call : Expression _ "." IDENTIFIER "(" ArgList ")"
  29) Assign : CONSTANT "=" Expression _

  "."           shift, and go to state 25
  "."           [reduce using rule 29 (Assign)]
  $default      reduce using rule 29 (Assign)


state 39

  30) Def : CAN IDENTIFIER Block _

  $default      reduce using rule 30 (Def)


state 40

  31) Def : CAN IDENTIFIER "(" _ ParamList ")" Block

  IDENTIFIER    shift, and go to state 48
  $default      reduce using rule 32 (ParamList)

  ParamList     go to state 47

state 41

  38) Block : "{" _ Expressions "}"

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17

  Expression    go to state 3
  Expressions   go to state 49
  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10

state 42

  35) Class : A CONSTANT Block _

  $default      reduce using rule 35 (Class)


state 43

  36) If : IF Expression Block _
  37) If : IF Expression Block _ NEWLINE ELSE Block

  NEWLINE       shift, and go to state 50
  NEWLINE       [reduce using rule 36 (If)]
  $default      reduce using rule 36 (If)


state 44

  23) Call : Expression "." IDENTIFIER "(" _ ArgList ")"

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17
  $default      reduce using rule 24 (ArgList)

  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10
  Expression    go to state 36
  ArgList       go to state 51

state 45

  21) Call : IDENTIFIER "(" ArgList ")" _

  $default      reduce using rule 21 (Call)


state 46

  26) ArgList : ArgList "," _ Expression

  A             shift, and go to state 19
  CAN           shift, and go to state 18
  IF            shift, and go to state 20
  NUMBER        shift, and go to state 11
  STRING        shift, and go to state 12
  TRUE          shift, and go to state 13
  FALSE         shift, and go to state 14
  NIL           shift, and go to state 15
  IDENTIFIER    shift, and go to state 16
  CONSTANT      shift, and go to state 17

  Literal       go to state 4
  Call          go to state 5
  Constant      go to state 6
  Assign        go to state 7
  Def           go to state 8
  Class         go to state 9
  If            go to state 10
  Expression    go to state 52

state 47

  31) Def : CAN IDENTIFIER "(" ParamList _ ")" Block
  34) ParamList : ParamList _ "," IDENTIFIER

  ")"           shift, and go to state 53
  ","           shift, and go to state 54


state 48

  33) ParamList : IDENTIFIER _

  $default      reduce using rule 33 (ParamList)


state 49

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
  38) Block : "{" Expressions _ "}"

  NEWLINE       shift, and go to state 23
  ";"           shift, and go to state 24
  "}"           shift, and go to state 55

  Terminator    go to state 22

state 50

  37) If : IF Expression Block NEWLINE _ ELSE Block

  ELSE          shift, and go to state 56


state 51

  23) Call : Expression "." IDENTIFIER "(" ArgList _ ")"
  26) ArgList : ArgList _ "," Expression

  ")"           shift, and go to state 57
  ","           shift, and go to state 46


state 52

  22) Call : Expression _ "." IDENTIFIER
  23) Call : Expression _ "." IDENTIFIER "(" ArgList ")"
  26) ArgList : ArgList "," Expression _

  "."           shift, and go to state 25
  $default      reduce using rule 26 (ArgList)


state 53

  31) Def : CAN IDENTIFIER "(" ParamList ")" _ Block

  "{"           shift, and go to state 41

  Block         go to state 58

state 54

  34) ParamList : ParamList "," _ IDENTIFIER

  IDENTIFIER    shift, and go to state 59


state 55

  38) Block : "{" Expressions "}" _

  $default      reduce using rule 38 (Block)


state 56

  37) If : IF Expression Block NEWLINE ELSE _ Block

  "{"           shift, and go to state 41

  Block         go to state 60

state 57

  23) Call : Expression "." IDENTIFIER "(" ArgList ")" _

  $default      reduce using rule 23 (Call)


state 58

  31) Def : CAN IDENTIFIER "(" ParamList ")" Block _

  $default      reduce using rule 31 (Def)


state 59

  34) ParamList : ParamList "," IDENTIFIER _

  $default      reduce using rule 34 (ParamList)


state 60

  37) If : IF Expression Block NEWLINE ELSE Block _

  $default      reduce using rule 37 (If)

